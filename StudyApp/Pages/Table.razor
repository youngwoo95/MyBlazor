@page "/table"
@using StudyApp.Data;
@inject IJSRuntime JSRuntime

<PageTitle>테이블 그리기 예제</PageTitle>

<style>

    .main_container {
        width: 100%;
        height: 100%;
        padding: 30px;
        display: flex;
        flex-direction: row;
        background-color: #edece8;
        box-sizing:border-box;
    }

    table{
        width:100%;
        height:100%;
        border-collapse: collapse;
    }
    th{
        border-bottom: 1px dashed black;
        text-align: center;
        height:50px;
    }

    td{
        border-bottom: 1px solid black;
        text-align:center;
        height:40px;
    }

    #chkbox{
        width:30px;
    }

    

    #ordbox{
        width:100px;
    }

    #title{
        width:100px;
    }

    #name{
        width: 200px;
    }

    #content{
        width:800px;
    }

    #create{
        width:150px;
    }

    .btnbox{
        display:flex;
        flex-direction:row;
        justify-content:end;
        width:100%;
    }

    .boxitem{
        display:block;
    }

</style>

<div class="main_container">
    <table>
        <tr>
            <th><input id="allcheckbox" type="checkbox" onclick="@(()=>btnAll("allcheckbox"))" /></th>
            <th id="ordbox">순서</th>
            <th id="title">제목</th>
            <th id="name">작성자</th>
            <th id="content">내용</th>
            <th id="create">일자</th>
        </tr>
        @* 블레이저 반복문 처리방법 [1] *@
        
        @foreach(var item in table)
        {
        <tr>
            <td id="chkbox"><input name="checkbox" type="checkbox" onclick="@(()=>btnEdit(item.Index))"/></td>
            <td id="ordbox">@item.Index</td>
            <td id="title">제목입니다1</td>
            <td id="name">김김김</td>
            <td id="content">내용요요요요요요용요용</td>
            <td id="create">2023-09-01</td>
        </tr>
        }
        
        @* 블레이저 반복문 처리방법 [2] *@
        @*
        @for(int i = 0; i < table.Count; i++)
        {
            var index = i;
            <tr>
                <td id="chkbox"><input type="checkbox" onclick="@(()=>btnEdit(index))" /></td>
                <td id="ordbox">@table[i].Index</td>
                <td id="title">제목입니다1</td>
                <td id="name">김김김</td>
                <td id="content">내용요요요요요요용요용</td>
                <td id="create">2023-09-01</td>
            </tr>
        }
        *@
    </table>
</div>

<div class="btnbox">
    <div class="boxitem">
        <button class="btn btn-primary" style="width:100px" @onclick="@(()=>btnAdd())">추가</button>
        <button class="btn btn-success" style="width:100px" @onclick="@(()=>btnEdit(2))">수정</button>
        <button class="btn btn-danger" style="width:100px" @onclick="@(()=> btnDelete(3))">삭제</button>
    </div>
</div>




@code {
    List<TableModel> table = new List<TableModel>();

    protected override void OnInitialized()
    {
        for (int i = 0; i < 10; i++)
        {
            table.Add(new TableModel()
            {
                    Index = i + 1,
                    Title = "제목입니다",
                    User = "김김김",
                    Content = "내용입니다",
            });
        }
    }

    private async Task btnAll(string id)
    {
        //await JSRuntime.InvokeAsync<object>("StartJs", "name");

        await JSRuntime.InvokeAsync<object>("createAlert", id);

        Console.WriteLine("전체체크");
    }

    // 추가버튼
    private async Task btnAdd()
    {
        await JSRuntime.InvokeAsync<object>("alert", "추가버튼 클릭");
    }

    private async Task btnEdit(int idx)
    {
        bool result = await JSRuntime.InvokeAsync<bool>("confirm", $"{idx}번 글을 정말로 수정하시겠습니까?");
        if (result)
        {
            // 수정함
        }
        else
        {
            // 수정안함
        }

    }

    // 삭제버튼
    private async Task btnDelete(int idx)
    {
        await JSRuntime.InvokeAsync<bool>("confirm", $"{idx}번 글을 정말로 삭제하시겠습니까?");
    }
}
